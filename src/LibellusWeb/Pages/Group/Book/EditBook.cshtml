@page "/Group/{gid:groupid}/Book/{bid:bookid}/EditBook/{handler?}"
@using Nanoid
@using System.Globalization
@model LibellusWeb.Pages.Group.Book.EditBookModel
@{
    ViewData["Title"] = "Edit book";
}

<div class="row d-flex">
<div class="col-md-2">
    <partial name="Group/_SideNavPartial" model="Model.GroupId"/>
</div>

<div class="col-md-8 align-items-center justify-content-center">
<section>
<h2>Edit book.</h2>
<hr/>

<form class="form-floating" id="book" method="post">
<div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
    <div class="form-floating mb-3">
        <input asp-for="Input.Title" type="text" class="form-control" placeholder="Book title">
        <label asp-for="Input.Title">Book title</label>
        <span asp-validation-for="Input.Title" class="text-danger"></span>
    </div>
<div class="form-floating mb-3">
    <textarea asp-for="Input.Description" class="form-control" placeholder="Description text" style="height: 200px"></textarea>
    <label asp-for="Input.Description">Description (Optional)</label>
    <span asp-validation-for="Input.Description" class="text-danger"></span>
</div>
<hr/>
<div class="container">
    <div class="row row-cols-2">
        <div id="author-selection" class="col">

            <div class="input-group mb-3">
                <button class="btn btn-outline-primary text-wrap"
                        type="button"
                        id="newauthor"
                        onclick="addNewSimpleValue('newauthorinput', 'checkbox', 'authoroptions', 'authorgroup', '@nameof(Model.InputAuthor)')">
                    Add author
                </button>
                <input id="newauthorinput"
                       type="text"
                       class="form-control"
                       placeholder="Author"
                       aria-label="Author"
                       list="authoroptions"/>
                <datalist id="authoroptions">
                    @{
                        foreach (var value in Model.Authors)
                        {
                            <option value="@value.Item1.Name.Value"></option>
                        }
                    }
                </datalist>
                <button class="btn btn-outline-dark" type="button" id="authorclear" onclick="unselect('InputAuthor')">Clear</button>
            </div>

            <div class="form-floating mb-3">
                <ul id="authorgroup" class="list-group" style="max-height: 300px; overflow-y: auto;">
                    @{
                        foreach (var value in Model.Authors)
                        {
                            <li class="list-group-item">
                                @{
                                    var tempId = Nanoid.Generate(size: 7);
                                    var inputValue = $"{value.Item1.Id.Value.ToString("N")}-{value.Item1.Name.Value}";
                                    var active = value.Item2 ? "checked" : string.Empty;
                                }
                                
                                <input @active id="@tempId" value="@inputValue" name="@nameof(Model.InputAuthor)" class="form-check-input ms-1 me-1" type="checkbox" />
                                <label class="form-check-label ms-1 me-1" for="@tempId">
                                    @value.Item1.Name.Value
                                </label>
                            </li>
                        }
                    }
                </ul>
            </div>

        </div>

        <div id="tag-selection" class="col">

            <div class="input-group mb-3">
                <button class="btn btn-outline-primary text-wrap"
                        type="button"
                        id="newtag"
                        onclick="addNewSimpleValue('newtaginput', 'checkbox', 'tagoptions', 'taggroup', '@nameof(Model.InputTag)')">
                    Add tag
                </button>
                <input id="newtaginput"
                       type="text"
                       class="form-control"
                       placeholder="Tag"
                       aria-label="Tag"
                       list="tagoptions"/>
                <datalist id="tagoptions">
                    @{
                        foreach (var value in Model.Tags)
                        {
                            <option value="@value.Item1.Name.Value"></option>
                        }
                    }
                </datalist>
                <button class="btn btn-outline-dark" type="button" id="tagclear" onclick="unselect('InputTag')">Clear</button>
            </div>

            <div class="form-floating mb-3">
                <ul id="taggroup" class="list-group" style="max-height: 300px; overflow-y: auto;">
                    @{
                        foreach (var value in Model.Tags)
                        {
                            <li class="list-group-item">
                                @{
                                    var tempId = Nanoid.Generate(size: 7);
                                    var inputValue = $"{value.Item1.Id.Value.ToString("N")}-{value.Item1.Name.Value}";
                                    var active = value.Item2 ? "checked" : string.Empty;
                                }
                                <input @active id="@tempId" value="@inputValue" name="@nameof(Model.InputTag)" class="form-check-input ms-1 me-1" type="checkbox"/>
                                <label class="form-check-label ms-1 me-1" for="@tempId">
                                    @value.Item1.Name.Value
                                </label>
                            </li>
                        }
                    }
                </ul>
            </div>

        </div>

        <div id="warningtag-selection" class="col">

            <div class="input-group mb-3">
                <button class="btn btn-outline-primary text-wrap"
                        type="button"
                        id="newwarningtag"
                        onclick="addNewSimpleValue('newwarningtaginput', 'checkbox', 'warningtagoptions', 'warningtaggroup', '@nameof(Model.InputWarningTag)')">
                    Add warning tag
                </button>
                <input id="newwarningtaginput"
                       type="text"
                       class="form-control"
                       placeholder="Warning tag"
                       aria-label="Warning tag"
                       list="warningtagoptions"/>
                <datalist id="warningtagoptions">
                    @{
                        foreach (var value in Model.WarningTags)
                        {
                            <option value="@value.Item1.Name.Value"></option>
                        }
                    }
                </datalist>
                <button class="btn btn-outline-dark" type="button" id="warningtagclear" onclick="unselect('InputWarningTag')">Clear</button>
            </div>

            <div class="form-floating mb-3">
                <ul id="warningtaggroup" class="list-group" style="max-height: 300px; overflow-y: auto;">
                    @{
                        foreach (var value in Model.WarningTags)
                        {
                            <li class="list-group-item">
                                @{
                                    var tempId = Nanoid.Generate(size: 7);
                                    var inputValue = $"{value.Item1.Id.Value.ToString("N")}-{value.Item1.Name.Value}";
                                    var active = value.Item2 ? "checked" : string.Empty;
                                }
                                <input @active id="@tempId" value="@inputValue" name="@nameof(Model.InputWarningTag)" class="form-check-input ms-1 me-1" type="checkbox"/>
                                <label class="form-check-label ms-1 me-1" for="@tempId">
                                    @value.Item1.Name.Value
                                </label>
                            </li>
                        }
                    }
                </ul>
            </div>

        </div>

    </div>


</div>

<div class="container">
    <div class="row row-cols-2">
        <div id="genre-selection" class="col">

            <div class="input-group mb-3">
                <button class="btn btn-outline-primary text-wrap  dropdown-toggle"
                        type="button"
                        id="newgenre"
                        data-bs-toggle="dropdown">
                    Add Genre
                </button>
                <ul class="dropdown-menu">
                    <li onclick="addTrueFalseValue('newgenreinput', 'checkbox', '', 'genregroup', '@nameof(Model.InputGenre)', 'true', '(Fiction)', '(Non-Fiction)')">
                        <a class="dropdown-item" href="#genre-selection">As fiction</a>
                    </li>
                    <li onclick="addTrueFalseValue('newgenreinput', 'checkbox', '', 'genregroup', '@nameof(Model.InputGenre)', 'false', '(Fiction)', '(Non-Fiction)')">
                        <a class="dropdown-item" href="#genre-selection">As non-fiction</a>
                    </li>
                </ul>
                <input id="newgenreinput"
                       type="text"
                       class="form-control"
                       placeholder="Genre"
                       aria-label="Genre"/>
                <button class="btn btn-outline-dark" type="button" id="genreclear" onclick="unselect('InputGenre')">Clear</button>
            </div>

            <div class="form-floating mb-3">
                <ul id="genregroup" class="list-group" style="max-height: 300px; overflow-y: auto;">
                    @{
                        foreach (var genre in Model.Genres)
                        {
                            var value = $"{genre.Item1.Id.Value.ToString("N")}-{genre.Item1.Name.Value}";
                            var name = genre.Item1.IsFiction ? "(Fiction)" : "(Non-Fiction)";

                            <li class="list-group-item">
                                @{
                                    var tempId = Nanoid.Generate(size: 7);
                                    var active = genre.Item2 ? "checked" : string.Empty;
                                }
                                <input @active id="@tempId" value="@value" name="@nameof(Model.InputGenre)" class="form-check-input ms-1 me-1" type="checkbox"/>
                                <label class="form-check-label ms-1 me-1" for="@tempId">
                                    @genre.Item1.Name.Value<i class="ms-1">@name</i>
                                </label>
                            </li>
                        }
                    }
                </ul>
            </div>

        </div>

        <div id="lit-form-selection" class="col">

            <div class="input-group mb-3">
                <button class="btn btn-outline-primary text-wrap"
                        type="button"
                        id="newlitform"
                        onclick="addNewSimpleValue('newlitforminput', 'radio', 'newlitformoptions', 'litformgroup', '@nameof(Model.InputLiteratureForm)')">
                    Add literature form
                </button>
                <input id="newlitforminput"
                       type="text"
                       class="form-control"
                       placeholder="Literature form"
                       aria-label="Literature form"
                       list="newlitformoptions"/>
                <datalist id="newlitformoptions">
                    @{
                        foreach (var value in Model.LiteratureForms)
                        {
                            <option value="@value.Item1.Name.Value"></option>
                        }
                    }
                </datalist>
                <button class="btn btn-outline-dark" type="button" id="litformclear" onclick="unselect('InputLiteratureForm')">Clear</button>
            </div>

            <div class="form-floating mb-3">
                <ul id="litformgroup" class="list-group">
                    @{
                        foreach (var value in Model.LiteratureForms)
                        {
                            <li class="list-group-item">
                                @{
                                    var tempId = Nanoid.Generate(size: 7);
                                    var inputValue = $"{value.Item1.Id.Value.ToString("N")}-{value.Item1.Name.Value}";
                                    var active = value.Item2 ? "checked" : string.Empty;
                                }
                                <input @active id="@tempId" value="@inputValue" name="@nameof(Model.InputLiteratureForm)" class="form-check-input ms-1 me-1" type="radio"/>
                                <label class="form-check-label ms-1 me-1" for="@tempId">
                                    @value.Item1.Name.Value
                                </label>
                            </li>
                        }
                    }
                </ul>
            </div>

        </div>

    </div>
</div>

<hr/>
<div class="container">
    <div class="row row-cols-2">
        <div id="series-selection" class="col">
            <div class="input-group mb-3">
                <button class="btn btn-outline-primary text-wrap"
                        type="button"
                        id="newseries"
                        onclick="addNewSimpleValue('newseriesinput', 'radio', 'newseriesoptions', 'newseriesgroup', '@nameof(Model.InputSeriesTitle)')">
                    Add series
                </button>
                <input id="newseriesinput"
                       type="text"
                       class="form-control"
                       placeholder="Series"
                       aria-label="Series"
                       list="newseriesoptions"/>
                <datalist id="newseriesoptions">
                    @{
                        foreach (var value in Model.Series)
                        {
                            <option value="@value.Item1.Title.Value"></option>
                        }
                    }
                </datalist>
                <button class="btn btn-outline-dark" type="button" id="newseriesclear" onclick="unselect('InputSeriesTitle')">Clear</button>
            </div>

            <div class="form-floating mb-3">
                <ul id="newseriesgroup" class="list-group" style="max-height: 300px; overflow-y: auto;">
                    @{
                        foreach (var value in Model.Series)
                        {
                            <li class="list-group-item">
                                @{
                                    var tempId = Nanoid.Generate(size: 7);
                                    var inputValue = $"{value.Item1.Id.Value.ToString("N")}-{value.Item1.Title.Value}";
                                    var active = value.Item2 ? "checked" : string.Empty;
                                }
                                <input @active id="@tempId" value="@inputValue" name="@nameof(Model.InputSeriesTitle)" class="form-check-input ms-1 me-1" type="radio"/>
                                <label class="form-check-label ms-1 me-1" for="@tempId">
                                    @value.Item1.Title.Value
                                </label>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>

        <div id="number-in-series-selection" class="col">
            <div class="input-group mb-3">
                <span class="input-group-text" id="numberinseries">Number in series</span>
                @{
                    string numberInSeries;
                    if (Model.Book.NumberInSeries.HasValue)
                    {
                        if (decimal.IsInteger(Model.Book.NumberInSeries.Value))
                        {
                            numberInSeries = ((int)Model.Book.NumberInSeries.Value).ToString();
                        }
                        else
                        {
                            numberInSeries = Model.Book.NumberInSeries.Value.ToString(CultureInfo.InvariantCulture);
                        }
                    }
                    else
                    {
                        numberInSeries = string.Empty;
                    }
                }
                <input asp-for="NumberInSeries" type="number" value="@numberInSeries" min="0.1" step="0.1" class="form-control" placeholder="Number in series" aria-label="Number in series" aria-describedby="numberinseries">
            </div>
        </div>

    </div>
</div>

<div>
    <button id="create-book-submit" type="submit" class="w-100 btn btn-lg btn-primary">Edit book</button>
</div>
</form>

<form asp-page-handler="delete" class="form-floating" id="book-delete" method="post">

    <div>
        <button id="delte-book-submit" type="submit" class="mt-2 w-100 btn btn-lg btn-danger">Delete book</button>
    </div>

</form>

<hr/>

<form class="form-floating" id="cover" asp-page-handler="CoverChange" method="post" enctype="multipart/form-data">
    <div class="container">
        <div class="row row-cols-2">
            <div class="mb-3 input-group">
                <label asp-for="Upload" class="input-group-text">Cover image</label>
                <input id="coverupload" class="form-control" type="file" asp-for="Upload" accept="image/*"/>
                <button class="btn btn-outline-dark" type="button" id="coverclear" onclick="resetThing('coverupload')">Clear</button>
            </div>
            <button id="edit-cover-image-submit" type="submit" class="w-100 btn btn-lg btn-primary">Change cover image</button>
        </div>
    </div>
</form>

<form asp-page-handler="CoverDelete" class="form-floating" id="cover-image-delete" method="post">
    <div>
        <button id="delte-profile-picture-submit" type="submit" class="mt-2 w-100 btn btn-lg btn-danger">Delete cover image</button>
    </div>
</form>

<hr/>
<partial name="Shared/_TopMarginGapPartial"/>

<div class="container">
    <h4>Available shelves.</h4>

    <table class="table table-bordered table-striped table-hover">
        <thead>
        <tr>
            <th scope="col"></th>
            <th scope="col">Name</th>
            <th scope="col">Description</th>
            <th scope="col">Book count</th>
            <th scope="col"></th>
        </tr>
        </thead>
        <tbody>
        @{
            var index = 1;
            foreach (var shelf in Model.Shelves)
            {
                <tr>
                    <form method="post">
                        <td>
                            @index
                        </td>
                        <td>
                            @{
                                var shelfView = new Dictionary<string, string>
                                {
                                    { "gid", Model.GroupId },
                                    { "shid", shelf.FriendlyId.Value },
                                };
                            }

                            <a asp-page="/Group/Shelf/Shelf" asp-all-route-data="shelfView">@shelf.Name</a>
                        </td>
                        <td>
                            @{
                                var desc = shelf.Description is null ? string.Empty : shelf.Description.Value;
                            }
                            @desc
                        </td>
                        <td>
                            <input type="hidden" asp-for="@Model.InputShelfId" value="@shelf.FriendlyId.Value"/>
                            <input class="btn btn-primary mb-3" type="submit" value="Add to shelf" asp-page-handler="AddShelf" />
                        </td>
                    </form>
                </tr>

                index++;
            }
        }
    </table>
</div>

</section>
</div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial"/>

    <script type="text/javascript">
        $('#book').on('submit', function () {

            addNewSimpleValue('newauthorinput', 'checkbox', 'authoroptions', 'authorgroup', '@nameof(Model.InputAuthor)');
            addNewSimpleValue('newtaginput', 'checkbox', 'tagoptions', 'taggroup', '@nameof(Model.InputTag)');
            addNewSimpleValue('newwarningtaginput', 'checkbox', 'warningtagoptions', 'warningtaggroup', '@nameof(Model.InputWarningTag)');

            addNewSimpleValue('newlitforminput', 'radio', 'newlitformoptions', 'litformgroup', '@nameof(Model.InputLiteratureForm)');
            addNewSimpleValue('newseriesinput', 'radio', 'newseriesoptions', 'newseriesgroup', '@nameof(Model.InputSeriesTitle)');

            return true;
        });
    </script>
}