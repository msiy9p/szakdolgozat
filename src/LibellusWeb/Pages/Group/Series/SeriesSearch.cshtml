@page "/Group/{gid:groupid}/Series/Search/{term:term}/{size:int=25}/{location:min(1)=1}"
@using LibellusWeb.ViewModels
@model LibellusWeb.Pages.Group.Series.SeriesSearchModel
@{
    ViewData["Title"] = "Series";
}

<div class="row d-flex">
    <div class="col-md-2">
        <partial name="Group/_SideNavPartial" model="Model.GroupId" />
    </div>

    <div class="col-md-8 align-items-center justify-content-center">
        @{
            var createRoute = new Dictionary<string, string>
        {
        { "gid", Model.GroupId },
        };
        }
        <div class="d-flex justify-content-between">
            @{
                var foundPosts = Model.FoundCount > 1 ?
                $"Found {Model.FoundCount} series." :
                $"Found {Model.FoundCount} series.";
            }

            <h2>@foundPosts</h2><a asp-page="/Group/Series/CreateSeries" asp-all-route-data="createRoute"><button class="btn btn-outline-success btn-sm" type="button">Create new series</button> </a>
        </div>

        <partial name="_SearchPartial" model="Model.InputSearchTerm" />
        <hr />
        @{
            var index = 0;
            foreach (var shelf in Model.Series)
            {
                <partial name="_SeriesVmPartial" model="new SeriesVm(shelf, Model.GroupId, shelf.FriendlyId.Value)" />

                if (index < shelf.Books.Count)
                {
                    <partial name="Shared/_TopMarginGapPartial" />
                }

                index++;
            }

            <partial name="Shared/_PageNavigationPartial" model="Model.PageNavigations" />
        }

    </div>
</div>